using System;
using System.IO;
using System.Runtime.ExceptionServices;
using System.Text;

namespace lab3test
{
    class Program
    {
        static void Main(string[] args)
        {
            IDictionary<string, int> map = new Dictionary<string, int>();
            using (StreamReader sr = File.OpenText(@"C:\Users\Daniel z\source\repos\Lab03\Lab03\TextFile1.txt"))
            {
                string s = "";
                
                char root = ' ';
                int przerwa = 0; // pozycja " " - początek słowa kiedy i == " " - koniec słowa
                

                while ((s = sr.ReadLine()) != null)
                {
                    //tutaj iteracja po literze
                    for (int i = 0; i < s.Length; i++)
                    {
                        if (i == s.Length - 1)
                        {
                            i++;
                            if (map.ContainsKey(s.Substring(przerwa, i - przerwa)))
                            {
                                map[s.Substring(przerwa, i - przerwa)] = map[s.Substring(przerwa, i - przerwa)] + 1;
                            }
                            else
                            {
                                map.Add(s.Substring(przerwa, i - przerwa), 1);
                            }
                            przerwa = 0;
                        }
                        else if (root.Equals(s[i]))
                        {
                            

                            if (map.ContainsKey(s.Substring(przerwa, i-przerwa)))
                            {
                                map[s.Substring(przerwa, i- przerwa)] = map[s.Substring(przerwa, i-przerwa)] + 1;
                            }
                            else map.Add(s.Substring(przerwa, i - przerwa), 1);
                            przerwa = i + 1;
                            
                        }
                        
                    }

                }
                
            }
            //map.Add("idk", 5);
            foreach (KeyValuePair<string, int> author in map)
            {
                Console.WriteLine("Key: {0}, Value: {1}",
                author.Key, author.Value);
            }
        }
    }
}
