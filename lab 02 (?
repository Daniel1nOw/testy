namespace Lab01test
{
    public class UnitTest1
    {
        [Fact]
        public void Test1()
        {
            int res = Fib.Fib_reku(5);
            Assert.Equal(5, res);

        }
        [Fact]
        public void Test2()
        {

            int res1 = Fib.Fib_iter(6);
            Assert.Equal(8, res1);

        }
        [Fact]
        public void Test3()
        {

            int res1 = Fib.Fib_reku(7);
            Assert.Equal(14, res1);

        }
        [Fact]
        public void Test4()
        {

            int res1 = Fib.Fib_iter(8);
            Assert.Equal(21, res1);

        }
    }

    public static class Fib
    {
        public static int Fib_iter(int n)
        {
            if (n <= 0)
                throw new ArgumentOutOfRangeException("n musi byc wieksze niz zero");

            int[] tab = new int[n + 1];
            tab[0] = 1;
            tab[1] = 1;

            for (int i = 2; i <= n; i++)
            {
                tab[i] = tab[i - 1] + tab[i - 2];
            }
            return tab[n - 1];
        }

        public static int Fib_reku(int n)
        {
            if (n <= 0)
                throw new ArgumentOutOfRangeException("n musi byc wieksze niz zero");
            if (n <= 2)
            {
                return 1;
            }
            else
            {
                return Fib_reku(n - 1) + Fib_reku(n - 2);
            }
        }
    }

    
}
